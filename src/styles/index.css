@import '@csstools/normalize.css/opinionated.css' layer(normalize);
@import url(_font.css) layer(font);
@layer normalize, reset, font;

/* ----- Style Reset -------------------------------------------------------- */

@layer reset {
	*,
	*::before,
	*::after {
		box-sizing: border-box;
	}

	body {
		margin: 0;
	}

	img, picture, video, canvas, svg {
		max-width: 100%;
		display: block;
	}

	p, h1, h2, h3, h4, h5, h6 {
		overflow-wrap: break-word;
	}
}

/* ----- Site Colors -------------------------------------------------------- */

body {
	background-color: #ffffff;
}

main a {
	color: inherit;
	box-shadow: 0 1px 0 oklch(50% 0.26 232);
	text-decoration: none;
}

main a:not(:hover, :active, :focus-visible, :focus-within) {
	box-shadow: 0 2px 0 oklch(60% 0.26 232);
}

/* Astro Code */
:is(.primary-layout, .full-width) > .astro-code {
	grid-column: popout;
	padding: 2ch;
	border-radius: 4px;
}

:is(.primary-layout, .full-width) > blockquote {
	grid-column: popout;
	background-color: oklch(95% 0 0);
	padding: 2ch;
	border-radius: 4px;
}

/**/

p {
	text-align: justify;
	-webkit-hyphens: auto;
	-moz-hyphens: auto;
	hyphens: auto;
}

.serif {
	font-family: Signifier;
}

.justify {
	text-align: justify;
	-webkit-hyphens: auto;
	-moz-hyphens: auto;
	hyphens: auto;
}

.sans {
	font-family: Geist;
}


/* ----- Content Grid ------------------------------------------------------- */

:root {
	/* User settings. */
	--padding-inline: 1rem;
	--content-max-width: 42.875rem;
	--narrow-size-reduction: 60px;
	--popout-extra-distance: 10px;
	--breakout-extra-distance: 120px;
}

.primary-layout {
	/* For calculations. */
	--_narrow-column-size: calc(
		(var(--content-max-width) - var(--narrow-size-reduction)) / 2
	);
	--_content-column-size: var(--narrow-size-reduction);
	--_breakout-column-size: calc(
		var(--breakout-extra-distance) - var(--popout-extra-distance)
	);

	display: grid;
	grid-template-columns:
		[full-width-start] minmax(var(--padding-inline), 1fr)
		[breakout-start]   minmax(0, var(--_breakout-column-size))
		[popout-start]     minmax(0, var(--popout-extra-distance))
		[content-start]    minmax(0, var(--_content-column-size))
		[narrow-start]     min(50% - var(--padding-inline), var(--_narrow-column-size))
		[center-line]
		                   min(50% - var(--padding-inline), var(--_narrow-column-size)) [narrow-end]
		                   minmax(0, var(--_content-column-size))                       [content-end]
		                   minmax(0, var(--popout-extra-distance))                      [popout-end]
		                   minmax(0, var(--_breakout-column-size))                      [breakout-end]
		                   minmax(var(--padding-inline), 1fr)                           [full-width-end];
}

:is(.primary-layout, .full-width) > *                      { grid-column: content;                      }
:is(.primary-layout, .full-width) > .narrow                { grid-column: narrow;                       }
:is(.primary-layout, .full-width) > .narrow-left-only      { grid-column: narrow-start / content-end;   }
:is(.primary-layout, .full-width) > .narrow-right-only     { grid-column: content-start / narrow-end;   }
:is(.primary-layout, .full-width) > .popout                { grid-column: popout;                       }
:is(.primary-layout, .full-width) > .popout-left-only      { grid-column: popout-start / content-end;   }
:is(.primary-layout, .full-width) > .popout-right-only     { grid-column: content-start / popout-end;   }
:is(.primary-layout, .full-width) > .breakout { grid-column: breakout;                     }
:is(.primary-layout, .full-width) > .breakout-left-only    { grid-column: breakout-start / content-end; }
:is(.primary-layout, .full-width) > .breakout-right-only   { grid-column: content-start / popout-end;   }

:is(.primary-layout, .full-width) > .full-width {
	display: grid;
	grid-template-columns: inherit;
	grid-column: full-width;
}
:is(.primary-layout, .full-width) > .full-width-left-only  { grid-column: full-width-start / content-end; }
:is(.primary-layout, .full-width) > .full-width-right-only { grid-column: content-start / full-width-end; }

:where(.primary-layout, .full-width) > img {
	width: 100%;
	max-height: 25vh;
	object-fit: cover;
}

.full-width-content-split,
.full-width-popout-split,
.full-width-narrow-split,
.full-width-breakout-split {
	grid-column: full-width;
	display: grid;
	grid-template-columns: inherit;

	> :is(:first-child, :last-child) {
		display: grid;
		grid-template-columns: subgrid;
		align-content: center;
	}

	> :has(img):is(:first-child, :last-child) {
		align-content: stretch;
	}

	> :where(:first-child) {
		grid-column: full-width-start / center-line;
		padding-right: 2rem;
		> * {
			grid-column: var(--_size, content) / center-line;
		}
	}

	> :where(:last-child) {
		grid-column: center-line / full-width-end;
		padding-left: 2rem;

		> * {
			grid-column: center-line / var(--_size);
		}
	}
}

.full-width-content-split  { --_size: content;  }
.full-width-narrow-split   { --_size: narrow;   }
.full-width-popout-split   { --_size: popout;   }
.full-width-content-split  { --_size: content;  }
.full-width-breakout-split { --_size: breakout; }

.full-half {
	padding: 0;
	align-self: stretch;
	> * {
		grid-column: 1 / -1;
	}

	> img {
		height: 100%;
		width: 100%;
		object-fit: cover;
	}
}
